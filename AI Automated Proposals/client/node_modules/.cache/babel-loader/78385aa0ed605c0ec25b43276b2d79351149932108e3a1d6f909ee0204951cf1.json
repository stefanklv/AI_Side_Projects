{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\stefa\\\\OneDrive\\\\Skrivebord\\\\Repositories\\\\AI Side Projects\\\\AI Automated Proposals\\\\client\\\\src\\\\components\\\\ProposalForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProposalForm = () => {\n  _s();\n  const [formData, setFormData] = useState({\n    'Client Information': [],\n    'Project Details': [],\n    'Pricing and Costs': []\n  });\n  const [pdfData, setPdfData] = useState(null);\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData(prevData => {\n      const newData = {\n        ...prevData\n      };\n      if (!newData[name]) {\n        newData[name] = [];\n      }\n      newData[name][e.target.dataset.index] = value;\n      return newData;\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    console.log('Form data submitted:', formData);\n    try {\n      const response = await axios.post('/api/generate/proposal', formData, {\n        responseType: 'blob'\n      });\n      console.log('Response from backend:', response.data);\n      setPdfData(response.data);\n      const url = window.URL.createObjectURL(new Blob([response.data]));\n      const link = document.createElement('a');\n      link.href = url;\n      link.setAttribute('download', 'proposal.pdf');\n      document.body.appendChild(link);\n      link.click();\n      link.parentNode.removeChild(link);\n    } catch (error) {\n      console.error('Error generating proposal:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Client Information\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), ['What is the name of the client?', 'What is the client\\'s industry?', 'What is the size of the client\\'s company (e.g., small, medium, large)?', 'What is the client\\'s contact information (email, phone number)?', 'Who is the primary contact person for the project?'].map((question, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: question\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"Client Information\",\n            \"data-index\": index,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Project Details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), ['What is the primary goal of this project?', 'What specific problems or needs does this project aim to address?', 'Why is this project important for the client?'].map((question, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: question\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"Project Details\",\n            \"data-index\": index,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Pricing and Costs\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"What is the predefined hourly rate for this project in NOK?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"Pricing and Costs\",\n          \"data-index\": 0,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Generate Proposal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), pdfData && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Proposal generated and downloaded successfully.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_s(ProposalForm, \"VIGsIgGS48JCBBqQ2INOdwPZ7ms=\");\n_c = ProposalForm;\nexport default ProposalForm;\nvar _c;\n$RefreshReg$(_c, \"ProposalForm\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","ProposalForm","_s","formData","setFormData","pdfData","setPdfData","handleChange","e","name","value","target","prevData","newData","dataset","index","handleSubmit","preventDefault","console","log","response","post","responseType","data","url","window","URL","createObjectURL","Blob","link","document","createElement","href","setAttribute","body","appendChild","click","parentNode","removeChild","error","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","map","question","type","onChange","_c","$RefreshReg$"],"sources":["C:/Users/stefa/OneDrive/Skrivebord/Repositories/AI Side Projects/AI Automated Proposals/client/src/components/ProposalForm.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst ProposalForm = () => {\r\n  const [formData, setFormData] = useState({\r\n    'Client Information': [],\r\n    'Project Details': [],\r\n    'Pricing and Costs': [],\r\n  });\r\n\r\n  const [pdfData, setPdfData] = useState(null);\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData((prevData) => {\r\n      const newData = { ...prevData };\r\n      if (!newData[name]) {\r\n        newData[name] = [];\r\n      }\r\n      newData[name][e.target.dataset.index] = value;\r\n      return newData;\r\n    });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    console.log('Form data submitted:', formData);\r\n    try {\r\n      const response = await axios.post('/api/generate/proposal', formData, { responseType: 'blob' });\r\n      console.log('Response from backend:', response.data);\r\n      setPdfData(response.data);\r\n\r\n      const url = window.URL.createObjectURL(new Blob([response.data]));\r\n      const link = document.createElement('a');\r\n      link.href = url;\r\n      link.setAttribute('download', 'proposal.pdf');\r\n      document.body.appendChild(link);\r\n      link.click();\r\n      link.parentNode.removeChild(link);\r\n      \r\n    } catch (error) {\r\n      console.error('Error generating proposal:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={handleSubmit}>\r\n        <div>\r\n          <h2>Client Information</h2>\r\n          {['What is the name of the client?', 'What is the client\\'s industry?', 'What is the size of the client\\'s company (e.g., small, medium, large)?', 'What is the client\\'s contact information (email, phone number)?', 'Who is the primary contact person for the project?'].map((question, index) => (\r\n            <div key={index}>\r\n              <label>{question}</label>\r\n              <input type=\"text\" name=\"Client Information\" data-index={index} onChange={handleChange} />\r\n            </div>\r\n          ))}\r\n        </div>\r\n        <div>\r\n          <h2>Project Details</h2>\r\n          {['What is the primary goal of this project?', 'What specific problems or needs does this project aim to address?', 'Why is this project important for the client?'].map((question, index) => (\r\n            <div key={index}>\r\n              <label>{question}</label>\r\n              <input type=\"text\" name=\"Project Details\" data-index={index} onChange={handleChange} />\r\n            </div>\r\n          ))}\r\n        </div>\r\n        <div>\r\n          <h2>Pricing and Costs</h2>\r\n          <label>What is the predefined hourly rate for this project in NOK?</label>\r\n          <input type=\"text\" name=\"Pricing and Costs\" data-index={0} onChange={handleChange} />\r\n        </div>\r\n        <button type=\"submit\">Generate Proposal</button>\r\n      </form>\r\n      {pdfData && <div>Proposal generated and downloaded successfully.</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProposalForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}